@page "/"
@rendermode InteractiveServer

@using FluentGridToolkit.Components
@using FluentGridToolkit.Sample.Model

@inject DbContext dbContext

<PageTitle>Home</PageTitle>

<h1>DataGid Example</h1>

<FluentDataGrid Items="@filterManager.Data" ShowHover="true"
                Pagination="@pagination"
ResizableColumns=true>
    <PropertyColumn Property="@(p => p.Name)" Title="Name" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <FluentGridTextFilter Property="@(p => p.Name)" FilterManager="@filterManager" ColumnName="Name" OnValueChanged="OnFilterChange" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(p => p.Email)" Title="Email" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(p => p.TotalSales)" Title="Total Sales" Format="N2" Align="Align.End" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn @ref="dateColumn" Property="@(p => p.AccountCreatedDate)" Title="Open Date" Format="yyyy-MM-dd" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <FluentGridDateRangeFilter Property="@(dateColumn.Property)" ColumnName="@dateColumn.Title" FilterManager="@filterManager" OnValueChanged="OnFilterChange" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(p => p.State)" Title="State" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
            </div>
        </ColumnOptions>
    </PropertyColumn>
</FluentDataGrid>
<FluentPaginator State="@pagination" />

@code{
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private FluentGridFilterManager<Account> filterManager = default;

    private PropertyColumn<Account, DateTime> dateColumn;

    protected override void OnInitialized()
    {
        filterManager = new FluentGridFilterManager<Account>(dbContext.Accounts);
    }

    private void OnFilterChange(){
        filterManager.ApplyFilters();
    }
}